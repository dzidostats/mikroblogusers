name: Fetch JBZD Users

on:
  workflow_dispatch:

jobs:
  fetch_users:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job_index: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requests
        run: pip install requests

      - name: Fetch users and save JSON
        run: |
          python - <<'EOF'
          import json
          import math
          import os
          import requests

          # Pobranie listy użytkowników
          url_users = "https://raw.githubusercontent.com/dzidostats/mikroblogusers/refs/heads/main/results/all_names.json"
          usernames = requests.get(url_users).json()

          # Podział na 20 jobów
          num_jobs = 20
          chunk_size = math.ceil(len(usernames) / num_jobs)
          job_index = int("${{ matrix.job_index }}")
          chunk = usernames[job_index*chunk_size:(job_index+1)*chunk_size]

          results = []
          for username in chunk:
              try:
                  url = f"https://jbzd.com.pl/search/users?page=1&per_page=10000&phrase={username}"
                  r = requests.get(url)
                  if r.status_code == 200:
                      data = r.json()
                      results.extend(data.get("values", []))
              except Exception as e:
                  print(f"Błąd przy użytkowniku {username}: {e}")

          os.makedirs("jobs_output", exist_ok=True)
          filename = f"jobs_output/job_{job_index+1}.json"
          with open(filename, "w", encoding="utf-8") as f:
              json.dump(results, f, ensure_ascii=False, indent=2)
          EOF

  commit_results:
    runs-on: ubuntu-latest
    needs: fetch_users
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Commit JSON files
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add jobs_output/*.json
          git commit -m "Add JBZD user data JSON files [skip ci]" || echo "No changes to commit"
          git push
